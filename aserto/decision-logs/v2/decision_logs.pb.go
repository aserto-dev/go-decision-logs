// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: aserto/decision-logs/v2/decision_logs.proto

package decision_logs

import (
	api "github.com/aserto-dev/go-decision-logs/aserto/decision-logs/v2/api"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListDecisionLogsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          *api.PaginationRequest `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
	Policies      []string               `protobuf:"bytes,2,rep,name=policies,proto3" json:"policies,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDecisionLogsRequest) Reset() {
	*x = ListDecisionLogsRequest{}
	mi := &file_aserto_decision_logs_v2_decision_logs_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDecisionLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDecisionLogsRequest) ProtoMessage() {}

func (x *ListDecisionLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_decision_logs_v2_decision_logs_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDecisionLogsRequest.ProtoReflect.Descriptor instead.
func (*ListDecisionLogsRequest) Descriptor() ([]byte, []int) {
	return file_aserto_decision_logs_v2_decision_logs_proto_rawDescGZIP(), []int{0}
}

func (x *ListDecisionLogsRequest) GetPage() *api.PaginationRequest {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *ListDecisionLogsRequest) GetPolicies() []string {
	if x != nil {
		return x.Policies
	}
	return nil
}

type ListDecisionLogsResponse struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Page          *api.PaginationResponse `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
	Results       []*DecisionLogItem      `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDecisionLogsResponse) Reset() {
	*x = ListDecisionLogsResponse{}
	mi := &file_aserto_decision_logs_v2_decision_logs_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDecisionLogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDecisionLogsResponse) ProtoMessage() {}

func (x *ListDecisionLogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_decision_logs_v2_decision_logs_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDecisionLogsResponse.ProtoReflect.Descriptor instead.
func (*ListDecisionLogsResponse) Descriptor() ([]byte, []int) {
	return file_aserto_decision_logs_v2_decision_logs_proto_rawDescGZIP(), []int{1}
}

func (x *ListDecisionLogsResponse) GetPage() *api.PaginationResponse {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *ListDecisionLogsResponse) GetResults() []*DecisionLogItem {
	if x != nil {
		return x.Results
	}
	return nil
}

type GetDecisionLogRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDecisionLogRequest) Reset() {
	*x = GetDecisionLogRequest{}
	mi := &file_aserto_decision_logs_v2_decision_logs_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDecisionLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDecisionLogRequest) ProtoMessage() {}

func (x *GetDecisionLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_decision_logs_v2_decision_logs_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDecisionLogRequest.ProtoReflect.Descriptor instead.
func (*GetDecisionLogRequest) Descriptor() ([]byte, []int) {
	return file_aserto_decision_logs_v2_decision_logs_proto_rawDescGZIP(), []int{2}
}

func (x *GetDecisionLogRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetDecisionLogResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Log           *DecisionLog           `protobuf:"bytes,1,opt,name=log,proto3" json:"log,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDecisionLogResponse) Reset() {
	*x = GetDecisionLogResponse{}
	mi := &file_aserto_decision_logs_v2_decision_logs_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDecisionLogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDecisionLogResponse) ProtoMessage() {}

func (x *GetDecisionLogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_decision_logs_v2_decision_logs_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDecisionLogResponse.ProtoReflect.Descriptor instead.
func (*GetDecisionLogResponse) Descriptor() ([]byte, []int) {
	return file_aserto_decision_logs_v2_decision_logs_proto_rawDescGZIP(), []int{3}
}

func (x *GetDecisionLogResponse) GetLog() *DecisionLog {
	if x != nil {
		return x.Log
	}
	return nil
}

type DecisionLogItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DecisionLogItem) Reset() {
	*x = DecisionLogItem{}
	mi := &file_aserto_decision_logs_v2_decision_logs_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DecisionLogItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecisionLogItem) ProtoMessage() {}

func (x *DecisionLogItem) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_decision_logs_v2_decision_logs_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecisionLogItem.ProtoReflect.Descriptor instead.
func (*DecisionLogItem) Descriptor() ([]byte, []int) {
	return file_aserto_decision_logs_v2_decision_logs_proto_rawDescGZIP(), []int{4}
}

func (x *DecisionLogItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DecisionLog struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Url           string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DecisionLog) Reset() {
	*x = DecisionLog{}
	mi := &file_aserto_decision_logs_v2_decision_logs_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DecisionLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecisionLog) ProtoMessage() {}

func (x *DecisionLog) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_decision_logs_v2_decision_logs_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecisionLog.ProtoReflect.Descriptor instead.
func (*DecisionLog) Descriptor() ([]byte, []int) {
	return file_aserto_decision_logs_v2_decision_logs_proto_rawDescGZIP(), []int{5}
}

func (x *DecisionLog) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type ListUsersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          *api.PaginationRequest `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUsersRequest) Reset() {
	*x = ListUsersRequest{}
	mi := &file_aserto_decision_logs_v2_decision_logs_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUsersRequest) ProtoMessage() {}

func (x *ListUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_decision_logs_v2_decision_logs_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUsersRequest.ProtoReflect.Descriptor instead.
func (*ListUsersRequest) Descriptor() ([]byte, []int) {
	return file_aserto_decision_logs_v2_decision_logs_proto_rawDescGZIP(), []int{6}
}

func (x *ListUsersRequest) GetPage() *api.PaginationRequest {
	if x != nil {
		return x.Page
	}
	return nil
}

type ListUsersResponse struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Page          *api.PaginationResponse `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
	Results       []*UserItem             `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUsersResponse) Reset() {
	*x = ListUsersResponse{}
	mi := &file_aserto_decision_logs_v2_decision_logs_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUsersResponse) ProtoMessage() {}

func (x *ListUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_decision_logs_v2_decision_logs_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUsersResponse.ProtoReflect.Descriptor instead.
func (*ListUsersResponse) Descriptor() ([]byte, []int) {
	return file_aserto_decision_logs_v2_decision_logs_proto_rawDescGZIP(), []int{7}
}

func (x *ListUsersResponse) GetPage() *api.PaginationResponse {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *ListUsersResponse) GetResults() []*UserItem {
	if x != nil {
		return x.Results
	}
	return nil
}

type GetUserRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserRequest) Reset() {
	*x = GetUserRequest{}
	mi := &file_aserto_decision_logs_v2_decision_logs_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRequest) ProtoMessage() {}

func (x *GetUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_decision_logs_v2_decision_logs_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRequest.ProtoReflect.Descriptor instead.
func (*GetUserRequest) Descriptor() ([]byte, []int) {
	return file_aserto_decision_logs_v2_decision_logs_proto_rawDescGZIP(), []int{8}
}

func (x *GetUserRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetUserResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	User          *User                  `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserResponse) Reset() {
	*x = GetUserResponse{}
	mi := &file_aserto_decision_logs_v2_decision_logs_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserResponse) ProtoMessage() {}

func (x *GetUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_decision_logs_v2_decision_logs_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserResponse.ProtoReflect.Descriptor instead.
func (*GetUserResponse) Descriptor() ([]byte, []int) {
	return file_aserto_decision_logs_v2_decision_logs_proto_rawDescGZIP(), []int{9}
}

func (x *GetUserResponse) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

type UserItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserItem) Reset() {
	*x = UserItem{}
	mi := &file_aserto_decision_logs_v2_decision_logs_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserItem) ProtoMessage() {}

func (x *UserItem) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_decision_logs_v2_decision_logs_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserItem.ProtoReflect.Descriptor instead.
func (*UserItem) Descriptor() ([]byte, []int) {
	return file_aserto_decision_logs_v2_decision_logs_proto_rawDescGZIP(), []int{10}
}

func (x *UserItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserItem) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type User struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Url           string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *User) Reset() {
	*x = User{}
	mi := &file_aserto_decision_logs_v2_decision_logs_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_decision_logs_v2_decision_logs_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_aserto_decision_logs_v2_decision_logs_proto_rawDescGZIP(), []int{11}
}

func (x *User) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type ExecuteQueryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          *api.PaginationRequest `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
	PolicyName    string                 `protobuf:"bytes,2,opt,name=policy_name,json=policyName,proto3" json:"policy_name,omitempty"`
	InstanceLabel string                 `protobuf:"bytes,3,opt,name=instance_label,json=instanceLabel,proto3" json:"instance_label,omitempty"`
	TopN          int64                  `protobuf:"varint,4,opt,name=top_n,json=topN,proto3" json:"top_n,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecuteQueryRequest) Reset() {
	*x = ExecuteQueryRequest{}
	mi := &file_aserto_decision_logs_v2_decision_logs_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteQueryRequest) ProtoMessage() {}

func (x *ExecuteQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_decision_logs_v2_decision_logs_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteQueryRequest.ProtoReflect.Descriptor instead.
func (*ExecuteQueryRequest) Descriptor() ([]byte, []int) {
	return file_aserto_decision_logs_v2_decision_logs_proto_rawDescGZIP(), []int{12}
}

func (x *ExecuteQueryRequest) GetPage() *api.PaginationRequest {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *ExecuteQueryRequest) GetPolicyName() string {
	if x != nil {
		return x.PolicyName
	}
	return ""
}

func (x *ExecuteQueryRequest) GetInstanceLabel() string {
	if x != nil {
		return x.InstanceLabel
	}
	return ""
}

func (x *ExecuteQueryRequest) GetTopN() int64 {
	if x != nil {
		return x.TopN
	}
	return 0
}

type ExecuteQueryResponse struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Page          *api.PaginationResponse `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
	Results       []*Result               `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecuteQueryResponse) Reset() {
	*x = ExecuteQueryResponse{}
	mi := &file_aserto_decision_logs_v2_decision_logs_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteQueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteQueryResponse) ProtoMessage() {}

func (x *ExecuteQueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_decision_logs_v2_decision_logs_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteQueryResponse.ProtoReflect.Descriptor instead.
func (*ExecuteQueryResponse) Descriptor() ([]byte, []int) {
	return file_aserto_decision_logs_v2_decision_logs_proto_rawDescGZIP(), []int{13}
}

func (x *ExecuteQueryResponse) GetPage() *api.PaginationResponse {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *ExecuteQueryResponse) GetResults() []*Result {
	if x != nil {
		return x.Results
	}
	return nil
}

type Result struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Deprecated: Marked as deprecated in aserto/decision-logs/v2/decision_logs.proto.
	Log           string    `protobuf:"bytes,1,opt,name=log,proto3" json:"log,omitempty"`
	Event         *Decision `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Result) Reset() {
	*x = Result{}
	mi := &file_aserto_decision_logs_v2_decision_logs_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Result) ProtoMessage() {}

func (x *Result) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_decision_logs_v2_decision_logs_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Result.ProtoReflect.Descriptor instead.
func (*Result) Descriptor() ([]byte, []int) {
	return file_aserto_decision_logs_v2_decision_logs_proto_rawDescGZIP(), []int{14}
}

// Deprecated: Marked as deprecated in aserto/decision-logs/v2/decision_logs.proto.
func (x *Result) GetLog() string {
	if x != nil {
		return x.Log
	}
	return ""
}

func (x *Result) GetEvent() *Decision {
	if x != nil {
		return x.Event
	}
	return nil
}

type GetDecisionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PolicyName    string                 `protobuf:"bytes,1,opt,name=policy_name,json=policyName,proto3" json:"policy_name,omitempty"`
	InstanceLabel string                 `protobuf:"bytes,2,opt,name=instance_label,json=instanceLabel,proto3" json:"instance_label,omitempty"`
	Since         *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=since,proto3" json:"since,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDecisionsRequest) Reset() {
	*x = GetDecisionsRequest{}
	mi := &file_aserto_decision_logs_v2_decision_logs_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDecisionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDecisionsRequest) ProtoMessage() {}

func (x *GetDecisionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_decision_logs_v2_decision_logs_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDecisionsRequest.ProtoReflect.Descriptor instead.
func (*GetDecisionsRequest) Descriptor() ([]byte, []int) {
	return file_aserto_decision_logs_v2_decision_logs_proto_rawDescGZIP(), []int{15}
}

func (x *GetDecisionsRequest) GetPolicyName() string {
	if x != nil {
		return x.PolicyName
	}
	return ""
}

func (x *GetDecisionsRequest) GetInstanceLabel() string {
	if x != nil {
		return x.InstanceLabel
	}
	return ""
}

func (x *GetDecisionsRequest) GetSince() *timestamppb.Timestamp {
	if x != nil {
		return x.Since
	}
	return nil
}

type GetDecisionsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Decision      *Decision              `protobuf:"bytes,1,opt,name=decision,proto3" json:"decision,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDecisionsResponse) Reset() {
	*x = GetDecisionsResponse{}
	mi := &file_aserto_decision_logs_v2_decision_logs_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDecisionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDecisionsResponse) ProtoMessage() {}

func (x *GetDecisionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_decision_logs_v2_decision_logs_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDecisionsResponse.ProtoReflect.Descriptor instead.
func (*GetDecisionsResponse) Descriptor() ([]byte, []int) {
	return file_aserto_decision_logs_v2_decision_logs_proto_rawDescGZIP(), []int{16}
}

func (x *GetDecisionsResponse) GetDecision() *Decision {
	if x != nil {
		return x.Decision
	}
	return nil
}

// represents a decision that an authorizer performed in the past
type Decision struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                                                                             // unique id, replay a decision starting with this, also useful to de-dup
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                                                                               // UTC time when the decision was made
	Path          string                 `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`                                                                                         // Policy path used in decision
	User          *DecisionUser          `protobuf:"bytes,4,opt,name=user,proto3" json:"user,omitempty"`                                                                                         // info about user for whom the decision as made
	Policy        *DecisionPolicy        `protobuf:"bytes,5,opt,name=policy,proto3" json:"policy,omitempty"`                                                                                     // info about policy used for the decision
	Outcomes      map[string]bool        `protobuf:"bytes,6,rep,name=outcomes,proto3" json:"outcomes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`      // outcome of the decisions specified in the policy context
	Resource      *structpb.Struct       `protobuf:"bytes,7,opt,name=resource,proto3" json:"resource,omitempty"`                                                                                 // the resource context used in a decision
	Annotations   map[string]string      `protobuf:"bytes,8,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // annotations that may be added to a decision
	TenantId      *string                `protobuf:"bytes,9,opt,name=tenant_id,json=tenantId,proto3,oneof" json:"tenant_id,omitempty"`                                                           // id of the tenant that generated the decision
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Decision) Reset() {
	*x = Decision{}
	mi := &file_aserto_decision_logs_v2_decision_logs_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Decision) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Decision) ProtoMessage() {}

func (x *Decision) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_decision_logs_v2_decision_logs_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Decision.ProtoReflect.Descriptor instead.
func (*Decision) Descriptor() ([]byte, []int) {
	return file_aserto_decision_logs_v2_decision_logs_proto_rawDescGZIP(), []int{17}
}

func (x *Decision) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Decision) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *Decision) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Decision) GetUser() *DecisionUser {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *Decision) GetPolicy() *DecisionPolicy {
	if x != nil {
		return x.Policy
	}
	return nil
}

func (x *Decision) GetOutcomes() map[string]bool {
	if x != nil {
		return x.Outcomes
	}
	return nil
}

func (x *Decision) GetResource() *structpb.Struct {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *Decision) GetAnnotations() map[string]string {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *Decision) GetTenantId() string {
	if x != nil && x.TenantId != nil {
		return *x.TenantId
	}
	return ""
}

// information about a user on behalf of whom a decision was made
type DecisionUser struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Context       *api.IdentityContext   `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"` // identity context used in the decision
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`           // id of the user the identity resolved to
	Email         string                 `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`     // convinience human-readable identifier
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DecisionUser) Reset() {
	*x = DecisionUser{}
	mi := &file_aserto_decision_logs_v2_decision_logs_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DecisionUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecisionUser) ProtoMessage() {}

func (x *DecisionUser) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_decision_logs_v2_decision_logs_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecisionUser.ProtoReflect.Descriptor instead.
func (*DecisionUser) Descriptor() ([]byte, []int) {
	return file_aserto_decision_logs_v2_decision_logs_proto_rawDescGZIP(), []int{18}
}

func (x *DecisionUser) GetContext() *api.IdentityContext {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *DecisionUser) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DecisionUser) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

// information about a policy used in a decision
type DecisionPolicy struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Context         *api.PolicyContext     `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`                                        // policy context used in the decision
	RegistryService string                 `protobuf:"bytes,2,opt,name=registry_service,json=registryService,proto3" json:"registry_service,omitempty"` // registry service where policy was retrieved from (e.g. opcr.io)
	RegistryImage   string                 `protobuf:"bytes,3,opt,name=registry_image,json=registryImage,proto3" json:"registry_image,omitempty"`       // image of the policy in the registry, including org (e.g. acmecorp/peoplefinder-abac)
	RegistryTag     string                 `protobuf:"bytes,4,opt,name=registry_tag,json=registryTag,proto3" json:"registry_tag,omitempty"`             // tag of the policy image (e.g. 0.8.2 or latest)
	RegistryDigest  string                 `protobuf:"bytes,5,opt,name=registry_digest,json=registryDigest,proto3" json:"registry_digest,omitempty"`    // digest of the policy image
	PolicyInstance  *api.PolicyInstance    `protobuf:"bytes,6,opt,name=policy_instance,json=policyInstance,proto3" json:"policy_instance,omitempty"`    // policy instance used in decision
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DecisionPolicy) Reset() {
	*x = DecisionPolicy{}
	mi := &file_aserto_decision_logs_v2_decision_logs_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DecisionPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecisionPolicy) ProtoMessage() {}

func (x *DecisionPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_decision_logs_v2_decision_logs_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecisionPolicy.ProtoReflect.Descriptor instead.
func (*DecisionPolicy) Descriptor() ([]byte, []int) {
	return file_aserto_decision_logs_v2_decision_logs_proto_rawDescGZIP(), []int{19}
}

func (x *DecisionPolicy) GetContext() *api.PolicyContext {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *DecisionPolicy) GetRegistryService() string {
	if x != nil {
		return x.RegistryService
	}
	return ""
}

func (x *DecisionPolicy) GetRegistryImage() string {
	if x != nil {
		return x.RegistryImage
	}
	return ""
}

func (x *DecisionPolicy) GetRegistryTag() string {
	if x != nil {
		return x.RegistryTag
	}
	return ""
}

func (x *DecisionPolicy) GetRegistryDigest() string {
	if x != nil {
		return x.RegistryDigest
	}
	return ""
}

func (x *DecisionPolicy) GetPolicyInstance() *api.PolicyInstance {
	if x != nil {
		return x.PolicyInstance
	}
	return nil
}

var File_aserto_decision_logs_v2_decision_logs_proto protoreflect.FileDescriptor

const file_aserto_decision_logs_v2_decision_logs_proto_rawDesc = "" +
	"\n" +
	"+aserto/decision-logs/v2/decision_logs.proto\x12\x17aserto.decision_logs.v2\x1a\x1cgoogle/api/annotations.proto\x1a2aserto/decision-logs/v2/api/identity_context.proto\x1a,aserto/decision-logs/v2/api/pagination.proto\x1a0aserto/decision-logs/v2/api/policy_context.proto\x1a1aserto/decision-logs/v2/api/policy_instance.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1cgoogle/protobuf/struct.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\"x\n" +
	"\x17ListDecisionLogsRequest\x12A\n" +
	"\x04page\x18\x01 \x01(\v2-.aserto.decisionlogs.api.v2.PaginationRequestR\x04page\x12\x1a\n" +
	"\bpolicies\x18\x02 \x03(\tR\bpolicies\"\xa2\x01\n" +
	"\x18ListDecisionLogsResponse\x12B\n" +
	"\x04page\x18\x01 \x01(\v2..aserto.decisionlogs.api.v2.PaginationResponseR\x04page\x12B\n" +
	"\aresults\x18\x02 \x03(\v2(.aserto.decision_logs.v2.DecisionLogItemR\aresults\"+\n" +
	"\x15GetDecisionLogRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"P\n" +
	"\x16GetDecisionLogResponse\x126\n" +
	"\x03log\x18\x01 \x01(\v2$.aserto.decision_logs.v2.DecisionLogR\x03log\"%\n" +
	"\x0fDecisionLogItem\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"\x1f\n" +
	"\vDecisionLog\x12\x10\n" +
	"\x03url\x18\x01 \x01(\tR\x03url\"U\n" +
	"\x10ListUsersRequest\x12A\n" +
	"\x04page\x18\x01 \x01(\v2-.aserto.decisionlogs.api.v2.PaginationRequestR\x04page\"\x94\x01\n" +
	"\x11ListUsersResponse\x12B\n" +
	"\x04page\x18\x01 \x01(\v2..aserto.decisionlogs.api.v2.PaginationResponseR\x04page\x12;\n" +
	"\aresults\x18\x02 \x03(\v2!.aserto.decision_logs.v2.UserItemR\aresults\" \n" +
	"\x0eGetUserRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"D\n" +
	"\x0fGetUserResponse\x121\n" +
	"\x04user\x18\x01 \x01(\v2\x1d.aserto.decision_logs.v2.UserR\x04user\"U\n" +
	"\bUserItem\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x129\n" +
	"\n" +
	"updated_at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\"\x18\n" +
	"\x04User\x12\x10\n" +
	"\x03url\x18\x01 \x01(\tR\x03url\"\xb5\x01\n" +
	"\x13ExecuteQueryRequest\x12A\n" +
	"\x04page\x18\x01 \x01(\v2-.aserto.decisionlogs.api.v2.PaginationRequestR\x04page\x12\x1f\n" +
	"\vpolicy_name\x18\x02 \x01(\tR\n" +
	"policyName\x12%\n" +
	"\x0einstance_label\x18\x03 \x01(\tR\rinstanceLabel\x12\x13\n" +
	"\x05top_n\x18\x04 \x01(\x03R\x04topN\"\x95\x01\n" +
	"\x14ExecuteQueryResponse\x12B\n" +
	"\x04page\x18\x01 \x01(\v2..aserto.decisionlogs.api.v2.PaginationResponseR\x04page\x129\n" +
	"\aresults\x18\x02 \x03(\v2\x1f.aserto.decision_logs.v2.ResultR\aresults\"W\n" +
	"\x06Result\x12\x14\n" +
	"\x03log\x18\x01 \x01(\tB\x02\x18\x01R\x03log\x127\n" +
	"\x05event\x18\x02 \x01(\v2!.aserto.decision_logs.v2.DecisionR\x05event\"\x8f\x01\n" +
	"\x13GetDecisionsRequest\x12\x1f\n" +
	"\vpolicy_name\x18\x01 \x01(\tR\n" +
	"policyName\x12%\n" +
	"\x0einstance_label\x18\x02 \x01(\tR\rinstanceLabel\x120\n" +
	"\x05since\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x05since\"U\n" +
	"\x14GetDecisionsResponse\x12=\n" +
	"\bdecision\x18\x01 \x01(\v2!.aserto.decision_logs.v2.DecisionR\bdecision\"\xe9\x04\n" +
	"\bDecision\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x128\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x12\n" +
	"\x04path\x18\x03 \x01(\tR\x04path\x129\n" +
	"\x04user\x18\x04 \x01(\v2%.aserto.decision_logs.v2.DecisionUserR\x04user\x12?\n" +
	"\x06policy\x18\x05 \x01(\v2'.aserto.decision_logs.v2.DecisionPolicyR\x06policy\x12K\n" +
	"\boutcomes\x18\x06 \x03(\v2/.aserto.decision_logs.v2.Decision.OutcomesEntryR\boutcomes\x123\n" +
	"\bresource\x18\a \x01(\v2\x17.google.protobuf.StructR\bresource\x12T\n" +
	"\vannotations\x18\b \x03(\v22.aserto.decision_logs.v2.Decision.AnnotationsEntryR\vannotations\x12 \n" +
	"\ttenant_id\x18\t \x01(\tH\x00R\btenantId\x88\x01\x01\x1a;\n" +
	"\rOutcomesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\bR\x05value:\x028\x01\x1a>\n" +
	"\x10AnnotationsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\f\n" +
	"\n" +
	"_tenant_id\"{\n" +
	"\fDecisionUser\x12E\n" +
	"\acontext\x18\x01 \x01(\v2+.aserto.decisionlogs.api.v2.IdentityContextR\acontext\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\x12\x14\n" +
	"\x05email\x18\x03 \x01(\tR\x05email\"\xc8\x02\n" +
	"\x0eDecisionPolicy\x12C\n" +
	"\acontext\x18\x01 \x01(\v2).aserto.decisionlogs.api.v2.PolicyContextR\acontext\x12)\n" +
	"\x10registry_service\x18\x02 \x01(\tR\x0fregistryService\x12%\n" +
	"\x0eregistry_image\x18\x03 \x01(\tR\rregistryImage\x12!\n" +
	"\fregistry_tag\x18\x04 \x01(\tR\vregistryTag\x12'\n" +
	"\x0fregistry_digest\x18\x05 \x01(\tR\x0eregistryDigest\x12S\n" +
	"\x0fpolicy_instance\x18\x06 \x01(\v2*.aserto.decisionlogs.api.v2.PolicyInstanceR\x0epolicyInstance2\xe9\x0f\n" +
	"\fDecisionLogs\x12\xc8\x02\n" +
	"\x10ListDecisionLogs\x120.aserto.decision_logs.v2.ListDecisionLogsRequest\x1a1.aserto.decision_logs.v2.ListDecisionLogsResponse\"\xce\x01\x92A\x9f\x01\n" +
	"\rdecision_logs\x12\x1cList available decision logs\x1a&Returns a collection of decision logs.* decision_logs.list_decision_logsb&\n" +
	"\x16\n" +
	"\x12DecisionLogsAPIKey\x12\x00\n" +
	"\f\n" +
	"\bTenantID\x12\x00\x82\xd3\xe4\x93\x02%\x12#/api/v2/decision_logs/decision_logs\x12\xcd\x02\n" +
	"\x0eGetDecisionLog\x12..aserto.decision_logs.v2.GetDecisionLogRequest\x1a/.aserto.decision_logs.v2.GetDecisionLogResponse\"\xd9\x01\x92A\xa3\x01\n" +
	"\rdecision_logs\x12\x12Get a decision log\x1a6Returns the location of a single decison log instance.*\x1edecision_logs.get_decision_logb&\n" +
	"\x16\n" +
	"\x12DecisionLogsAPIKey\x12\x00\n" +
	"\f\n" +
	"\bTenantID\x12\x00\x82\xd3\xe4\x93\x02,\x12*/api/v2/decision_logs/decision_logs/{name}\x12\xcd\x02\n" +
	"\tListUsers\x12).aserto.decision_logs.v2.ListUsersRequest\x1a*.aserto.decision_logs.v2.ListUsersResponse\"\xe8\x01\x92A\xc1\x01\n" +
	"\rdecision_logs\x12&List users referenced by decision logs\x1aFReturns a collection of users that may be referenced by decision logs.*\x18decision_logs.list_usersb&\n" +
	"\x16\n" +
	"\x12DecisionLogsAPIKey\x12\x00\n" +
	"\f\n" +
	"\bTenantID\x12\x00\x82\xd3\xe4\x93\x02\x1d\x12\x1b/api/v2/decision_logs/users\x12\xd2\x02\n" +
	"\aGetUser\x12'.aserto.decision_logs.v2.GetUserRequest\x1a(.aserto.decision_logs.v2.GetUserResponse\"\xf3\x01\x92A\xc7\x01\n" +
	"\rdecision_logs\x12&Get a user referenced by decision logs\x1aNReturns the location of a single user that may be referenced by decision logs.*\x16decision_logs.get_userb&\n" +
	"\x16\n" +
	"\x12DecisionLogsAPIKey\x12\x00\n" +
	"\f\n" +
	"\bTenantID\x12\x00\x82\xd3\xe4\x93\x02\"\x12 /api/v2/decision_logs/users/{id}\x12\xce\x02\n" +
	"\fExecuteQuery\x12,.aserto.decision_logs.v2.ExecuteQueryRequest\x1a-.aserto.decision_logs.v2.ExecuteQueryResponse\"\xe0\x01\x92A\xb6\x01\n" +
	"\rdecision_logs\x12\x13query decision logs\x1aSReturns a collection of raw decision logs strings matching the query specification.*\x13decision_logs.queryb&\n" +
	"\x16\n" +
	"\x12DecisionLogsAPIKey\x12\x00\n" +
	"\f\n" +
	"\bTenantID\x12\x00\x82\xd3\xe4\x93\x02 :\x01*\"\x1b/api/v2/decision_logs/query\x12\xc7\x02\n" +
	"\fGetDecisions\x12,.aserto.decision_logs.v2.GetDecisionsRequest\x1a-.aserto.decision_logs.v2.GetDecisionsResponse\"\xd7\x01\x92A\x86\x01\n" +
	"\rdecision_logs\x12\x15decision event stream\x1a\x1dReturns a stream of decisions*\x17decision_logs.decisionsb&\n" +
	"\x16\n" +
	"\x12DecisionLogsAPIKey\x12\x00\n" +
	"\f\n" +
	"\bTenantID\x12\x00\x82\xd3\xe4\x93\x02G\x12E/api/v2/decision_logs/decisions/policy/{policy_name}/{instance_label}0\x01B\x8b\x02\x92A\xa0\x01*\x01\x022\x10application/json:\x10application/jsonZO\n" +
	")\n" +
	"\x12DecisionLogsAPIKey\x12\x13\b\x02\x1a\rauthorization \x02\n" +
	"\"\n" +
	"\bTenantID\x12\x16\b\x02\x1a\x10aserto-tenant-id \x02b&\n" +
	"\x16\n" +
	"\x12DecisionLogsAPIKey\x12\x00\n" +
	"\f\n" +
	"\bTenantID\x12\x00ZLgithub.com/aserto-dev/go-decision-logs/aserto/decision-logs/v2;decision_logs\xaa\x02\x16Aserto.DecisionLogs.V2b\x06proto3"

var (
	file_aserto_decision_logs_v2_decision_logs_proto_rawDescOnce sync.Once
	file_aserto_decision_logs_v2_decision_logs_proto_rawDescData []byte
)

func file_aserto_decision_logs_v2_decision_logs_proto_rawDescGZIP() []byte {
	file_aserto_decision_logs_v2_decision_logs_proto_rawDescOnce.Do(func() {
		file_aserto_decision_logs_v2_decision_logs_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_aserto_decision_logs_v2_decision_logs_proto_rawDesc), len(file_aserto_decision_logs_v2_decision_logs_proto_rawDesc)))
	})
	return file_aserto_decision_logs_v2_decision_logs_proto_rawDescData
}

var file_aserto_decision_logs_v2_decision_logs_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_aserto_decision_logs_v2_decision_logs_proto_goTypes = []any{
	(*ListDecisionLogsRequest)(nil),  // 0: aserto.decision_logs.v2.ListDecisionLogsRequest
	(*ListDecisionLogsResponse)(nil), // 1: aserto.decision_logs.v2.ListDecisionLogsResponse
	(*GetDecisionLogRequest)(nil),    // 2: aserto.decision_logs.v2.GetDecisionLogRequest
	(*GetDecisionLogResponse)(nil),   // 3: aserto.decision_logs.v2.GetDecisionLogResponse
	(*DecisionLogItem)(nil),          // 4: aserto.decision_logs.v2.DecisionLogItem
	(*DecisionLog)(nil),              // 5: aserto.decision_logs.v2.DecisionLog
	(*ListUsersRequest)(nil),         // 6: aserto.decision_logs.v2.ListUsersRequest
	(*ListUsersResponse)(nil),        // 7: aserto.decision_logs.v2.ListUsersResponse
	(*GetUserRequest)(nil),           // 8: aserto.decision_logs.v2.GetUserRequest
	(*GetUserResponse)(nil),          // 9: aserto.decision_logs.v2.GetUserResponse
	(*UserItem)(nil),                 // 10: aserto.decision_logs.v2.UserItem
	(*User)(nil),                     // 11: aserto.decision_logs.v2.User
	(*ExecuteQueryRequest)(nil),      // 12: aserto.decision_logs.v2.ExecuteQueryRequest
	(*ExecuteQueryResponse)(nil),     // 13: aserto.decision_logs.v2.ExecuteQueryResponse
	(*Result)(nil),                   // 14: aserto.decision_logs.v2.Result
	(*GetDecisionsRequest)(nil),      // 15: aserto.decision_logs.v2.GetDecisionsRequest
	(*GetDecisionsResponse)(nil),     // 16: aserto.decision_logs.v2.GetDecisionsResponse
	(*Decision)(nil),                 // 17: aserto.decision_logs.v2.Decision
	(*DecisionUser)(nil),             // 18: aserto.decision_logs.v2.DecisionUser
	(*DecisionPolicy)(nil),           // 19: aserto.decision_logs.v2.DecisionPolicy
	nil,                              // 20: aserto.decision_logs.v2.Decision.OutcomesEntry
	nil,                              // 21: aserto.decision_logs.v2.Decision.AnnotationsEntry
	(*api.PaginationRequest)(nil),    // 22: aserto.decisionlogs.api.v2.PaginationRequest
	(*api.PaginationResponse)(nil),   // 23: aserto.decisionlogs.api.v2.PaginationResponse
	(*timestamppb.Timestamp)(nil),    // 24: google.protobuf.Timestamp
	(*structpb.Struct)(nil),          // 25: google.protobuf.Struct
	(*api.IdentityContext)(nil),      // 26: aserto.decisionlogs.api.v2.IdentityContext
	(*api.PolicyContext)(nil),        // 27: aserto.decisionlogs.api.v2.PolicyContext
	(*api.PolicyInstance)(nil),       // 28: aserto.decisionlogs.api.v2.PolicyInstance
}
var file_aserto_decision_logs_v2_decision_logs_proto_depIdxs = []int32{
	22, // 0: aserto.decision_logs.v2.ListDecisionLogsRequest.page:type_name -> aserto.decisionlogs.api.v2.PaginationRequest
	23, // 1: aserto.decision_logs.v2.ListDecisionLogsResponse.page:type_name -> aserto.decisionlogs.api.v2.PaginationResponse
	4,  // 2: aserto.decision_logs.v2.ListDecisionLogsResponse.results:type_name -> aserto.decision_logs.v2.DecisionLogItem
	5,  // 3: aserto.decision_logs.v2.GetDecisionLogResponse.log:type_name -> aserto.decision_logs.v2.DecisionLog
	22, // 4: aserto.decision_logs.v2.ListUsersRequest.page:type_name -> aserto.decisionlogs.api.v2.PaginationRequest
	23, // 5: aserto.decision_logs.v2.ListUsersResponse.page:type_name -> aserto.decisionlogs.api.v2.PaginationResponse
	10, // 6: aserto.decision_logs.v2.ListUsersResponse.results:type_name -> aserto.decision_logs.v2.UserItem
	11, // 7: aserto.decision_logs.v2.GetUserResponse.user:type_name -> aserto.decision_logs.v2.User
	24, // 8: aserto.decision_logs.v2.UserItem.updated_at:type_name -> google.protobuf.Timestamp
	22, // 9: aserto.decision_logs.v2.ExecuteQueryRequest.page:type_name -> aserto.decisionlogs.api.v2.PaginationRequest
	23, // 10: aserto.decision_logs.v2.ExecuteQueryResponse.page:type_name -> aserto.decisionlogs.api.v2.PaginationResponse
	14, // 11: aserto.decision_logs.v2.ExecuteQueryResponse.results:type_name -> aserto.decision_logs.v2.Result
	17, // 12: aserto.decision_logs.v2.Result.event:type_name -> aserto.decision_logs.v2.Decision
	24, // 13: aserto.decision_logs.v2.GetDecisionsRequest.since:type_name -> google.protobuf.Timestamp
	17, // 14: aserto.decision_logs.v2.GetDecisionsResponse.decision:type_name -> aserto.decision_logs.v2.Decision
	24, // 15: aserto.decision_logs.v2.Decision.timestamp:type_name -> google.protobuf.Timestamp
	18, // 16: aserto.decision_logs.v2.Decision.user:type_name -> aserto.decision_logs.v2.DecisionUser
	19, // 17: aserto.decision_logs.v2.Decision.policy:type_name -> aserto.decision_logs.v2.DecisionPolicy
	20, // 18: aserto.decision_logs.v2.Decision.outcomes:type_name -> aserto.decision_logs.v2.Decision.OutcomesEntry
	25, // 19: aserto.decision_logs.v2.Decision.resource:type_name -> google.protobuf.Struct
	21, // 20: aserto.decision_logs.v2.Decision.annotations:type_name -> aserto.decision_logs.v2.Decision.AnnotationsEntry
	26, // 21: aserto.decision_logs.v2.DecisionUser.context:type_name -> aserto.decisionlogs.api.v2.IdentityContext
	27, // 22: aserto.decision_logs.v2.DecisionPolicy.context:type_name -> aserto.decisionlogs.api.v2.PolicyContext
	28, // 23: aserto.decision_logs.v2.DecisionPolicy.policy_instance:type_name -> aserto.decisionlogs.api.v2.PolicyInstance
	0,  // 24: aserto.decision_logs.v2.DecisionLogs.ListDecisionLogs:input_type -> aserto.decision_logs.v2.ListDecisionLogsRequest
	2,  // 25: aserto.decision_logs.v2.DecisionLogs.GetDecisionLog:input_type -> aserto.decision_logs.v2.GetDecisionLogRequest
	6,  // 26: aserto.decision_logs.v2.DecisionLogs.ListUsers:input_type -> aserto.decision_logs.v2.ListUsersRequest
	8,  // 27: aserto.decision_logs.v2.DecisionLogs.GetUser:input_type -> aserto.decision_logs.v2.GetUserRequest
	12, // 28: aserto.decision_logs.v2.DecisionLogs.ExecuteQuery:input_type -> aserto.decision_logs.v2.ExecuteQueryRequest
	15, // 29: aserto.decision_logs.v2.DecisionLogs.GetDecisions:input_type -> aserto.decision_logs.v2.GetDecisionsRequest
	1,  // 30: aserto.decision_logs.v2.DecisionLogs.ListDecisionLogs:output_type -> aserto.decision_logs.v2.ListDecisionLogsResponse
	3,  // 31: aserto.decision_logs.v2.DecisionLogs.GetDecisionLog:output_type -> aserto.decision_logs.v2.GetDecisionLogResponse
	7,  // 32: aserto.decision_logs.v2.DecisionLogs.ListUsers:output_type -> aserto.decision_logs.v2.ListUsersResponse
	9,  // 33: aserto.decision_logs.v2.DecisionLogs.GetUser:output_type -> aserto.decision_logs.v2.GetUserResponse
	13, // 34: aserto.decision_logs.v2.DecisionLogs.ExecuteQuery:output_type -> aserto.decision_logs.v2.ExecuteQueryResponse
	16, // 35: aserto.decision_logs.v2.DecisionLogs.GetDecisions:output_type -> aserto.decision_logs.v2.GetDecisionsResponse
	30, // [30:36] is the sub-list for method output_type
	24, // [24:30] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_aserto_decision_logs_v2_decision_logs_proto_init() }
func file_aserto_decision_logs_v2_decision_logs_proto_init() {
	if File_aserto_decision_logs_v2_decision_logs_proto != nil {
		return
	}
	file_aserto_decision_logs_v2_decision_logs_proto_msgTypes[17].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_aserto_decision_logs_v2_decision_logs_proto_rawDesc), len(file_aserto_decision_logs_v2_decision_logs_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_aserto_decision_logs_v2_decision_logs_proto_goTypes,
		DependencyIndexes: file_aserto_decision_logs_v2_decision_logs_proto_depIdxs,
		MessageInfos:      file_aserto_decision_logs_v2_decision_logs_proto_msgTypes,
	}.Build()
	File_aserto_decision_logs_v2_decision_logs_proto = out.File
	file_aserto_decision_logs_v2_decision_logs_proto_goTypes = nil
	file_aserto_decision_logs_v2_decision_logs_proto_depIdxs = nil
}
